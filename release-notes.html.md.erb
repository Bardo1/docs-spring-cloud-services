---
title: Release Notes for Spring Cloud&reg; Services on Pivotal Cloud Foundry
owner: Spring Cloud Services
---

<html class="list-style-none"></html>

Release notes for [Spring Cloud Services for Pivotal Cloud Foundry](https://network.pivotal.io/products/p-spring-cloud-services)

## <a id="1-4-0-migrating-from-1-3-x"></a>Migrating from 1.3.x

If you are upgrading from a 1.3.x release of Spring Cloud Services, no changes are required for client applications or Spring Cloud Services service instances.

## <a id="1-4-0-migrating-from-1-2-x"></a>Migrating from 1.2.x

If you are upgrading from a 1.2.x release of Spring Cloud Services, no changes are required for client applications or Spring Cloud Services service instances.

## <a id="1-4-0-migrating-from-1-1-x"></a>Migrating from 1.1.x

If you are upgrading from a 1.1.x release of Spring Cloud Services, no changes are required for client applications or Spring Cloud Services service instances.

## <a id="1-4-0-migrating-from-1-0-x"></a>Migrating from 1.0.x

The Spring Cloud Services client dependencies were restructured in 1.1.0. In 1.3.x, they are based on Spring Cloud Camden. To ensure compatibility of your client applications with Spring Cloud Services 1.3.x service instances, you must update your client applications to include the current dependencies and the Spring Boot and Spring Cloud Maven BOM dependencies. For information about upgrading Spring Cloud Services service instances after upgrading the Spring Cloud Services product, see the <a href="/spring-cloud-services/1-3/common/service-instance-upgrades.html">Service Instance Upgrades</a> topic. For complete information about the current Spring Cloud Services client dependencies, see <a href="/spring-cloud-services/1-3/common/client-dependencies.html">Client Dependencies</a>.

After upgrading a 1.0.x Circuit Breaker Dashboard service instance to a 1.3.x version, you must unbind, rebind, and restart any client applications which were bound to the instance. This is due to a change in how service instance credentials are managed.

## <a id="1-4-0"></a>1.4.0

**Release Date: 29th May 2017**

Enhancements included in this release:

* The Config Server now can use a HashiCorp Vault server as a configuration source, directly or through an HTTP or HTTPS proxy. For more information, see the [Configuring with Vault](/spring-cloud-services/config-server/configuring-with-vault.html) topic in the [Config Server](/spring-cloud-services/config-server/) documentation.
* The Config Server now can use a composite backend comprising one or more Git repositories and up to one HashiCorp Vault server. For more information, see the [Composite Backends](/spring-cloud-services/config-server/composite-backends.html) topic in the [Config Server](/spring-cloud-services/config-server/) documentation.
* The Config Server's `/health` endpoint, provided by Spring Boot Actuator, now displays failure information when the Config Server cannot use the provided configuration or otherwise encounters an error. For information about accessing this endpoint, see the [Access Actuator Endpoints](/spring-cloud-services/operator-information.html#access-actuator-endpoints) section of the [Operator Information](/spring-cloud-services/operator-information.html) topic.
* The Config Server's backing application now logs failure information when the Config Server cannot use the provided configuration or otherwise encounters an error. For information about accessing the backing application logs, see the [Read Backing Application Logs](/spring-cloud-services/operator-information.html#backing-application-logs) section of the [Operator Information](/spring-cloud-services/operator-information.html) topic.
* The Config Server dashboard now displays detailed failure information when the Config Server cannot use the provided configuration or otherwise encounters an error. For more information, see the [Using the Dashboard](/spring-cloud-services/config-server/using-the-dashboard.html) topic in the [Config Server](/spring-cloud-services/config-server/) documentation.

* The Spring Cloud Services service broker has been upgraded to Spring Boot 1.5.2 and Spring Cloud Dalston.RELEASE.
