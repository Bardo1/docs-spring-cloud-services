---
title: Spring Cloud Connectors
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

To connect client applications to the Circuit Breaker Dashboard, Spring Cloud Services uses [Spring Cloud Connectors](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-connectors.html), including the [Spring Cloud Cloud Foundry Connector](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-cloud-foundry-connector.html), which discovers services bound to applications running in Cloud Foundry.

## Service Detection

The connector inspects Cloud Foundry's `VCAP_SERVICES` environment variable, which stores connection and identification information for service instances that are bound to Cloud Foundry applications, to detect available services. Below is an example of a `VCAP_SERVICES` entry for the Spring Cloud Services Circuit Breaker Dashboard (edited for brevity).

```json
"p-circuit-breaker-dashboard": [
 {
  "credentials": {
   "dashboard": {
    "uri": "https://hystrix-fd3842f2-ad07-40c0-9908-a763061f332c.apps.wise.com"
   },
   "stream": {
    "uri": "https://turbine-fd3842f2-ad07-40c0-9908-a763061f332c.apps.wise.com"
   }
  },
  "label": "p-circuit-breaker-dashboard",
  "name": "circuit-breaker-dashboard",
  "plan": "standard",
  "tags": [
   "circuit-breaker",
   "hystrix-amqp",
   "spring-cloud"
  ]
 }
]
```

For each service in the `VCAP_SERVICES` variable, the connector considers the following fields:

* `tags`: Attributes or names of backing technologies behind the service.
* `label`: The service offering's name (not to be confused with a service _instance's_ name).
* `credentials.uri`: A URI pertaining to the service instance.
* `credentials.uris`: URIs pertaining to the service instance.

### Circuit Breaker Dashboard Detection Criteria

To establish availability of the Circuit Breaker Dashboard, the Spring Cloud Cloud Foundry Connector compares `VCAP_SERVICES` service entries against the following criteria:

* `tags` including `hystrix-amqp`

## See Also

For more information about Spring Cloud Connectors, see the following:

* [Spring Cloud Cloud Foundry Connector documentation](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-cloud-foundry-connector.html)
* [Spring Cloud Spring Service Connector documentation](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-spring-service-connector.html)
* [Spring Cloud Connectors documentation](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-connectors.html)
* [Spring Cloud Connectors for Spring Cloud Services on Pivotal Cloud Foundry&reg;](https://github.com/pivotal-cf/spring-cloud-services-connector)
