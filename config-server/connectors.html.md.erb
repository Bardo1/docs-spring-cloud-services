---
title: Spring Cloud Connectors
---

<strong><%= modified_date %></strong>

To connect client applications to the Config Server, Spring Cloud Services uses [Spring Cloud Connectors](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-connectors.html), including the [Spring Cloud Cloud Foundry Connector](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-cloud-foundry-connector.html), which discovers services bound to applications running in Cloud Foundry.

## Service Detection

The connector inspects Cloud Foundry's `VCAP_SERVICES` environment variable, which stores connection and identification information for service instances that are bound to Cloud Foundry applications, to detect available services. Below is an example of a `VCAP_SERVICES` entry for the Spring Cloud Services Config Server.

```json
"p-config-server": [
 {
  "credentials": {
   "uri": "http://4iCr7l:69e26t@config-1dc445ef-c09f.wise.com"
  },
  "label": "p-config-server",
  "name": "config-server",
  "plan": "standard",
  "tags": [
   "configuration",
   "spring-cloud"
  ]
 }
]
```

For each service in the `VCAP_SERVICES` variable, the connector considers the following fields:

* `tags`: Attributes or names of backing technologies behind the service.
* `label`: The service offering's name (not to be confused with a service _instance's_ name).
* `credentials.uri`: A URI pertaining to the service instance.
* `credentials.uris`: URIs pertaining to the service instance.

### Config Server Detection Criteria

To establish availability of the Config Server, the Spring Cloud Cloud Foundry Connector compares `VCAP_SERVICES` service entries against the following criteria:

* `tags` including `configuration`

## Application Configuration

When the connector detects a Config Server service instance which has been bound to the application, it will automatically set the ```spring.cloud.config.uri``` property in the client application's environment, using the URL provided in the Config Server instance's ```credentials``` object. The connector will also set additional security properties to allow the client application to access the Config Server service instance.

## See Also

For more information about Spring Cloud Connectors, see the following:

* [Spring Cloud Cloud Foundry Connector documentation](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-cloud-foundry-connector.html)
* [Spring Cloud Connectors documentation](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-connectors.html)
* [Spring Cloud Connectors for Spring Cloud Services on Pivotal Cloud Foundry&reg;](https://github.com/pivotal-cf/spring-cloud-services-connector)
