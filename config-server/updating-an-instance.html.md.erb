---
title: Updating an Instance
owner: Spring Cloud Services
---

You can update settings on a Config Server service instance using the cf Command Line Interface tool. The `cf update-service` command can be given a `-c` flag with a JSON object containing parameters used to configure the service instance.

Parameters used to configure the configuration source are part of a JSON object called `git`, as in `{"git": { "uri": "http://example.com/config" } }`. For more information on the purposes of these fields, see the [The Config Server](/spring-cloud-services/config-server/server.html) topic. The parameters are listed below.

| Parameter                             | Function                                                                                |
|---------------------------------------|-----------------------------------------------------------------------------------------|
| <code>uri</code>                      | The URI of a repository that can be used as the default configuration source            |
| <code>label</code>                    | The default "label" that can be used if a request is received without a label           |
| <code>repos."name"</code>             | A repository object, containing repository fields                                       |
| <code>repos."name".pattern</code>     | A pattern for the names of applications that store configuration from this repository   |
| <code>repos."name".uri</code>         | The URI of this repository                                                              |
| <code>repos."name".searchPaths</code> | A pattern used to search for configuration-containing subdirectories in this repository |
| <code>repos."name".username</code>    | The username used to access this repository (if protected by HTTP Basic authentication) |
| <code>repos."name".password</code>    | The password used to access this repository (if protected by HTTP Basic authentication) |

Other parameters accepted for the Config Server are listed below.

| Parameter            | Function                                                                                   | Example                          |
|----------------------|--------------------------------------------------------------------------------------------|----------------------------------|
| <code>count</code>   | The number of nodes to provision: 1 by default, more for running in high-availability mode | <code>'{"count": 3}'</code>      |
| <code>upgrade</code> | Whether to upgrade the instance                                                            | <code>'{"upgrade": true}'</code> |

To update a Config Server service instance's settings, target the org and space of the service instance:

<pre class="terminal">
$ cf target -o myorg -s development

API endpoint:   https://api.cf.wise.com (API version: 2.43.0)
User:           user
Org:            myorg
Space:          development
</pre>

Then run `cf update-service SERVICE_NAME -c '{ "PARAMETER": "VALUE" }'`, where `SERVICE_NAME` is the name of the service instance, `PARAMETER` is a supported parameter, and `VALUE` is the value for the parameter.

To update a service instance and set the configuration sources, run:

<pre class="terminal">
$ cf update-service config-server -c '{"git": { "uri": "https://github.com/spring-cloud-samples/config-repo", "repos": { "cook": { "pattern": "cook*", "uri": "https://github.com/spring-cloud-samples/cook-config" } } } }'
Updating service instance config-server as admin...
OK

Update in progress. Use 'cf services' or 'cf service config-server' to check operation status.
</pre>

To update a service instance and set the count of instances for running in high-availability mode, run:

<pre class="terminal">
$ cf update-service config-server -c '{"count": 3}'
Updating service instance config-server as admin...
OK

Update in progress. Use 'cf services' or 'cf service config-server' to check operation status.
</pre>

As the command output suggests, you can use the `cf services` or `cf service` commands to check the status of the service instance. When the update is complete, the `cf service` command will give a status of `update succeeded`:

<pre class="terminal">
$ cf service config-server

Service instance: config-server
Service: p-config-server
Bound apps:
Tags:
Plan: standard
Description: Config Server for Spring Cloud Applications
Documentation url: http://docs.pivotal.io/spring-cloud-services/
Dashboard: https://spring-cloud-broker.apps.wise.com/dashboard/p-config-server/e2615a44-66f5-4fda-9ddc-079af1db9ae4

Last Operation
Status: update succeeded
Message:
Started: 2016-06-24T21:11:53Z
Updated: 2016-06-24T21:13:59Z
</pre>

The service instance is now updated and ready to be used. For information about using an application to access configuration values served by a Config Server service instance, see the <a href="/spring-cloud-services/config-server/writing-client-applications.html">Writing Client Applications</a> topic.
