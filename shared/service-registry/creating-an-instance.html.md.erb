---
title: Creating an Instance
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

You can create a Service Registry service instance using either the Cloud Foundry Command Line Interface tool (cf CLI) or <%= vars.scs_platform_name %> Apps Manager.

<p class='note'><strong>Note</strong>: Service Registry service instances can run in a high-availability mode, with an arbitrary number of replicated nodes, and can replicate service registrations with peers in other PCF spaces, organizations, or deployments. These behaviors can only be configured through use of the cf CLI. (After creating a service instance using Apps Manager, you can use the cf CLI to configure the instance. See the <a href="/spring-cloud-services/service-registry/updating-an-instance.html">Updating an Instance</a> topic.)</p>

## <a id="using-cf-cli"></a>Using the cf CLI

Target the correct org and space:

<%= partial vars.scs_sr_creating_instance_target %>

You can view plan details for the Config Server product by running `cf marketplace -s`.

<%= partial vars.scs_sr_creating_instance_marketplace %>

Run `cf create-service`, specifying the service, plan name, and instance name. Optionally, you may add the `-c` flag and provide a JSON object that specifies configuration parameters.

General parameters used to configure the Service Registry are listed below.

| Parameter            | Function                                                                                   | Example                          |
|----------------------|--------------------------------------------------------------------------------------------|----------------------------------|
| <code>count</code>   | The number of nodes to provision: 1 by default, more for running in high-availability mode | <code>'{"count": 3}'</code>      |
| <code>upgrade</code> | Whether to upgrade the instance                                                            | <code>'{"upgrade": true}'</code> |

A Service Registry service instance can also be configured to replicate its registry with peer Service Registry service instances in other PCF deployments, organizations, or spaces. For more information on the configuration parameters used to enable peer replication, see the [Enabling Peer Replication](/spring-cloud-services/service-registry/enabling-peer-replication.html) topic.

To create an instance with the default of a single node, run:

<%= partial vars.scs_sr_creating_instance_create_one_node %>

To create an instance, specifying that three nodes should be provisioned, run:

<%= partial vars.scs_sr_creating_instance_create_multiple_nodes %>

As the command output suggests, you can use the `cf services` or `cf service` commands to check the status of the service instance. When the Service Registry instance is ready to be used, the `cf service` command will give a status of `create succeeded`:

<%= partial vars.scs_sr_creating_instance_service %>

<%= vars.scs_creating_instance_discrepancy %>

## <a id="using-apps-manager"></a>Using Apps Manager

Log into Apps Manager as a Space Developer. In the Marketplace, select **Service Registry**.

<%= image_tag(vars.scs_sr_creating_instance_img_marketplace) %>

Select the desired plan for the new service instance.

<%= image_tag(vars.scs_sr_creating_instance_img_select_plan) %>

Provide a name for the service instance (for example, "service-registry"). Click the **Add** button.

<%= image_tag(vars.scs_sr_creating_instance_img_instance_name) %>

In the **Services** list, click the listing for the new service instance.

<%= image_tag(vars.scs_sr_creating_instance_img_service_successfully_added) %>

Click the **Manage** link.

<%= image_tag(vars.scs_sr_creating_instance_img_manage_link) %>

It may take a few minutes to provision the service instance; while it is being provisioned, you will see a "The service instance is initializing" message. When the instance is ready, its dashboard will load automatically.

<%= image_tag(vars.scs_cs_creating_instance_img_dashboard_more) %>

For information about registering an application with a Service Registry service instance, see the <a href="/spring-cloud-services/service-registry/writing-client-applications.html">Writing Client Applications</a> topic.
