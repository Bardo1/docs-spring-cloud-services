---
title: Creating an Instance
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

You can create a Config Server service instance using either the Cloud Foundry Command Line Interface tool (cf CLI) or <%= vars.scs_platform_name %> Apps Manager (you cannot configure a service instance using Apps Manager).

## <a id="using-cf-cli"></a>Using the cf CLI

Begin by targeting the correct org and space.

<%= partial vars.scs_cs_creating_instance_target %>

You can view plan details for the Config Server product using `cf marketplace -s`.

<%= partial vars.scs_cs_creating_instance_marketplace %>

Create the service instance using `cf create-service`, using the `-c` flag to provide a JSON object that specifies the configuration parameters. For information about the parameters used to configure a Git configuration source, see the [Configuring with Git](/spring-cloud-services/config-server/configuring-with-git.html) topic. For information about the parameters used to configure a HashiCorp Vault configuration source, see the [Configuring with Vault](/spring-cloud-services/config-server/configuring-with-vault.html) topic.

General parameters accepted for the Config Server are listed below.

| Parameter            | Function                                                                                   | Example                          |
|----------------------|--------------------------------------------------------------------------------------------|----------------------------------|
| <code>count</code>   | The number of nodes to provision: 1 by default, more for running in high-availability mode | <code>'{"count": 3}'</code>      |
| <code>upgrade</code> | Whether to upgrade the instance                                                            | <code>'{"upgrade": true}'</code> |

To create an instance, specifying settings for Git configuration sources and that three nodes should be provisioned:

<%= partial vars.scs_cs_creating_instance_create %>

As the command output suggests, you can use the `cf services` or `cf service` commands to check the status of the service instance. When the service instance is ready, the `cf service` command will give a status of `create succeeded`:

<%= partial vars.scs_cs_creating_instance_service %>

<p class='note'><strong>Important</strong>: The <code>cf service</code> and <code>cf services</code> commands may report a <code>create succeeded</code> status even if the Config Server cannot initialize using the provided settings. For example, given an invalid URI for a configuration source, the service instance may still be created and have a <code>create succeeded</code> status. <br /> <br /> If the service instance does not appear to be functioning correctly, you can visit its dashboard to double-check that the provided settings are valid and accurate. See the <a href="/spring-cloud-services/config-server/using-the-dashboard.html">Using the Dashboard</a> topic.</p>

<%= vars.scs_creating_instance_discrepancy %>

## <a id="using-apps-manager"></a>Using Apps Manager

<p class='note'><strong>Note</strong>: If you create a Config Server service instance using Apps Manager, you will need to use the cf CLI to update the service instance and provide settings (including one or more configuration sources) before the instance will be usable. For information on updating a Config Server service instance, see the <a href="/spring-cloud-services/config-server/updating-an-instance.html">Updating an Instance</a> topic.</p>

Log into Apps Manager as a Space Developer. In the Marketplace, select **Config Server**.

   <%= image_tag(vars.scs_cs_creating_instance_img_marketplace) %>

Select the desired plan for the new service instance.

   <%= image_tag(vars.scs_cs_creating_instance_img_select_plan) %>

Provide a name for the service instance (for example, "config-server"). Click the **Add** button.

   <%= image_tag(vars.scs_cs_creating_instance_img_instance_name) %>

In the **Services** list, click the **Manage** link under the listing for the new service instance.

   <%= image_tag(vars.scs_cs_creating_instance_img_service_successfully_added) %>

It may take a few minutes to provision the service instance; while it is being provisioned, you will see a "The service instance is initializing" message. When the instance is ready, its dashboard will load automatically.

   <%= image_tag(vars.scs_cs_creating_instance_img_dashboard_new) %>

The dashboard displays the current settings for the Config Server service instance. Before you can use this service instance, you must update it using the cf CLI to supply it with a configuration source. For information about updating a service instance to configure instance settings, see the <a href="/spring-cloud-services/config-server/updating-an-instance.html">Updating an Instance</a> topic.
