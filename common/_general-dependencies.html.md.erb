<p class='note'><strong>Important</strong>: Ensure that the ordering of the Maven BOM dependencies listed below is preserved in your application's build file. Dependency resolution is affected in both Maven and Gradle by the order in which dependencies are declared.</p>

To work with Spring Cloud Services service instances, your client application must include the following BOMs: 

* `spring-cloud-services-dependencies`
* `spring-cloud-dependencies` 
* `spring-boot-dependencies`, unless you use `spring-boot-starter-parent` (with Maven) or the Spring Boot Gradle plugin (with Gradle)

See the following sections for how to construct a build file for your use case. 

### <a id="build-file"></a> General Dependencies

Construct your build file using one of the examples below, for either Maven or Gradle. Replace `[BOOT]`, `[CLOUD]`, and `[SCS]` according to your Spring Boot and Spring Cloud version. Refer to the following table: 

| If using...             | ...use <code>[BOOT]</code>  | ...use <code>[CLOUD]</code>   | ...use <code>[SCS]</code>  |
|-------------------------|-----------------------------|-------------------------------|----------------------------|
| Boot 2, Cloud Finchley  | <code>2.0.3.RELEASE</code>  | <code>Finchley.RELEASE</code> | <code>2.0.1.RELEASE</code> |
| Boot 1.5, Cloud Edgware | <code>1.5.13.RELEASE</code> | <code>Edgware.SR3</code>      | <code>1.6.4.RELEASE</code> |

#### For Maven 

If using Maven, include in `pom.xml`:

```xml
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>[BOOT]</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.pivotal.spring.cloud</groupId>
            <artifactId>spring-cloud-services-dependencies</artifactId>
            <version>[SCS]</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>[CLOUD]</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
  </dependencyManagement>
```

If not using the `spring-boot-starter-parent`, include in the `<dependencyManagement>` block of `pom.xml`:

```
  <dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>[BOOT]</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

        <!-- ... -->

    </dependencies>
  </dependencyManagement>
```

#### For Gradle 

If using Gradle, you will also need to use the <a href="https://github.com/spring-gradle-plugins/dependency-management-plugin">Gradle dependency management plugin</a>.

Include in `build.gradle`:

```groovy
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:[BOOT]")
    }
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:[CLOUD]"
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:[SCS]"
    }
}

repositories {
    maven {
        url "https://repo.spring.io/plugins-release"
    }
}
```

If not using the Spring Boot Gradle plugin, include in the `dependencyManagement` block of `build.gradle`:

```groovy
dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:[BOOT]"
    }
}
```
